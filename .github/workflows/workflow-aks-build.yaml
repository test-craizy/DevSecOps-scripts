name: Reusable AKS Build Workflow

on:
  workflow_call:
    inputs:
      nombre:
        description: 'Nombre del microservicio'
        required: true
        type: string
      namespace:
        description: 'Namespace de Kubernetes'
        required: true
        type: string
      aks:
        description: 'Nombre del cluster AKS'
        required: true
        type: string
      squad:
        description: 'Nombre del squad'
        required: true
        type: string
      repoValidation:
        description: 'Repositorio de validaciones'
        required: true
        type: string
        default: ''
      folderValidation:
        description: 'Carpeta de validaciones'
        required: true
        type: string
        default: ''
      smokeFile:
        description: 'Nombre del archivo de pruebas de humo'
        required: true
        type: string
        default: 'smoke_test.postman_collection.json'
      acceptanceFile:
        description: 'Nombre del archivo de pruebas de aceptación'
        required: true
        type: string
        default: 'acceptance_test.postman_collection.json'
      noAG:
        description: 'Indica si no se utiliza API Gateway'
        required: true
        type: boolean
        default: false
      servicePort:
        description: 'Puerto del servicio'
        required: true
        type: string
        default: '8080'
      certificate_hv:
        description: 'Certificado HV'
        required: false
        type: string
        default: null
      certificate_ag:
        description: 'Certificado AG'
        required: false
        type: string
        default: null
      certificate_ca:
        description: 'Certificado CA'
        required: false
        type: string
        default: null
    secrets:
      gh_token:
        description: "GitHub Token para autenticación"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          path: ${{ github.repository }}

      - name: Checkout Repository (DevSecOps-scripts)
        uses: actions/checkout@v3
        with:
          repository: test-craizy/DevSecOps-scripts
          token: ${{ secrets.gh_token }}
          path: devsecops-scripts  
          ref: main
          fetch-depth: 0

      # - name: Set parameters
      #   run: chmod +x devsecops-scripts/utils/set-parameters.sh && devsecops-scripts/utils/set-parameters.sh '${{ inputs.componente }}'

      - name: Set Environment Variables
        run: chmod +x devsecops-scripts/utils/set-environment.sh && devsecops-scripts/utils/set-environment.sh '' '${{ inputs.certificate_hv}}' '${{ inputs.certificate_ag }}' '${{ inputs.certificate_ca }}' 
          
      # - name: Echo Parameters
      #   run: |
      #     echo "Nombre: ${{ env.NOMBRE }}"
      #     echo "Namespace: ${{ env.NAMESPACE }}"
      #     echo "AKS: ${{ env.AKS }}"
      #     echo "Squad: ${{ env.SQUAD }}"
      #     echo "Repo Validation: ${{ env.REPO_VALIDATION }}"
      #     echo "Folder Validation: ${{ env.FOLDER_VALIDATION }}"
      #     echo "Smoke File: ${{ env.SMOKE_FILE }}"
      #     echo "Acceptance File: ${{ env.ACCEPTANCE_FILE }}"
      #     echo "No AG: ${{ env.NO_AG }}"
      #     echo "Service Port: ${{ env.SERVICE_PORT }}"

      - name: Echo Environment Variables
        run: |
          echo "absolutePathFolder=${{ env.absolutePathFolder }}"
          echo "absolutePathPom=${{ env.absolutePathPom }}"
          echo "mavenOptions=${{ env.mavenOptions }}"
          echo "jdkArchitectureOption=${{ env.jdkArchitectureOption }}"
          echo "publishJUnitResults=${{ env.publishJUnitResults }}"
          echo "scriptPath=${{ env.scriptPath }}"
          echo "AKS_SCRIPT_PATH=${{ env.AKS_SCRIPT_PATH }}"
          echo "certificadoHV=${{ env.certificadoHV }}"
          echo "certificadoAG=${{ env.certificadoAG }}"
          echo "certificadoCA=${{ env.certificadoCA }}"
          echo "manifestsFolderName=${{ env.manifestsFolderName }}"

      - name: run build
        run: chmod +x ${{ env.AKS_SCRIPT_PATH }}/aks/validator/validate-parameters.sh && ${{ env.AKS_SCRIPT_PATH }}/aks/validator/validate-parameters.sh '${{ env.AKS_SCRIPT_PATH }}/utils' '${{ inputs.certificate_hv}}' '${{ inputs.certificate_ag }}' '${{ inputs.certificate_ca }}'
       